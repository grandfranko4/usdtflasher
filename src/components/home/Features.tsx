import React from 'react';
import styled from 'styled-components';
import Section from '../common/Section';
import FeatureCard from '../common/FeatureCard';

const FeaturesGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  
  @media (max-width: 992px) {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @media (max-width: 576px) {
    grid-template-columns: 1fr;
  }
`;

const Features: React.FC = () => {
  const features = [
    {
      title: 'Works on P2P',
      description: 'Our USDT TRC20 Flashing Software works seamlessly on peer-to-peer platforms, allowing for direct transactions between users without intermediaries.',
      icon: 'ðŸ’°',
    },
    {
      title: '365-Day Validity',
      description: 'Unlike other flashing tools with limited durations, our software ensures that the flashed USDT remains valid for 365 days before disappearing.',
      icon: 'ðŸ“…',
    },
    {
      title: 'Fully Tradable & Transferable',
      description: 'Flashed USDT generated by our software is fully tradable, swappable, and transferable, just like real USDT.',
      icon: 'ðŸ”„',
    },
    {
      title: 'Secure & Untraceable',
      description: 'Our software uses advanced encryption and privacy protection, ensuring that all transactions remain untraceable on the blockchain.',
      icon: 'ðŸ”’',
    },
    {
      title: 'Full Blockchain Confirmation',
      description: 'Every transaction made with our software receives full blockchain confirmation, making the flashed USDT appear as legitimate and verified.',
      icon: 'âœ…',
    },
    {
      title: 'Instant Flashing Process',
      description: 'Transactions are executed instantly, allowing users to generate and transfer flashed USDT within seconds.',
      icon: 'âš¡',
    },
  ];

  return (
    <Section
      id="features"
      title="Key Features"
      subtitle="Discover what makes USDT FLASHER PRO the ultimate solution for secure and flexible USDT transactions."
      centered
      background="light"
      padding="large"
    >
      <FeaturesGrid>
        {features.map((feature, index) => (
          <FeatureCard
            key={index}
            title={feature.title}
            description={feature.description}
            icon={feature.icon}
          />
        ))}
      </FeaturesGrid>
    </Section>
  );
};

export default Features;
